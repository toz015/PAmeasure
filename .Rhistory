select(DEATH, TIMEDTH, HYPERTEN, TIMEHYP, RANDID, SEX:educ) %>%
group_by(RANDID) %>%
mutate(time = min(TIMEDTH, TIMEHYP),
status = ifelse(time==TIMEDTH, DEATH*2, HYPERTEN),
status = ifelse(status == 1, 1, 0)) %>% #
select(time, status, everything()) %>%
filter(time!=0) %>% ungroup() %>%
select(time, status, SEX:educ, -BPMEDS) %>% na.omit()
X <- df %>% select(SEX:educ)
df$status %>% table
set.seed(1234)
df <- framingham %>% filter(PERIOD==1) %>%
select(DEATH, TIMEDTH, HYPERTEN, TIMEHYP, RANDID, SEX:educ) %>%
group_by(RANDID) %>%
mutate(time = min(TIMEDTH, TIMEHYP),
status = ifelse(time==TIMEDTH, DEATH*2, HYPERTEN),
status = ifelse(status == 1, 1, 0)) %>% #
select(time, status, everything()) %>%
filter(time!=0) %>% ungroup() %>%
select(time, status, SEX:educ, -BPMEDS) %>% na.omit()
X <- df %>% select(SEX:educ)
df$status %>% table
# split train and test data
sample_index <- sample(1:dim(df)[1], round(2/3*dim(df)[1]), replace = F)
train_y <- df[sample_index, ] %>% select(time, status)
train_x <- X[sample_index, ]
test_y <- df[-sample_index, ] %>% select(time, status)
test_x <- X[-sample_index, ]
# fit models
tau <- quantile(df$time[sample_index], 0.5)
fit.coxph.full <- coxph(Surv(time, status) ~ ., data = df[sample_index, ],
x=TRUE,y=TRUE)
fit.exp <- survreg(Surv(time, status) ~ ., data = df[sample_index, ],
dist="exponential", x=TRUE, y=TRUE)
fit.lognormal <- survreg(Surv(time, status) ~ ., data = df[sample_index, ],
dist="lognormal", x=TRUE, y=TRUE)
fit.weibull <- survreg(Surv(time, status) ~ ., data = df[sample_index, ],
dist="weibull", x=TRUE, y=TRUE)
column_names <- colnames(df)
length(column_names)
time_var <- "time"
status_var <- "status"
covariates <-column_names[-(1:2)]
length(covariates)
exp.out <- pam.surverg_restricted(fit.exp, covariates = covariates, time_var = time_var, status_var = status_var)
exp.out
#restricted_pa_aft <- function(fit.survreg, tau, y.input = NULL, predict = F,
#                             new.x = NULL, new.y = NULL, new.delta = NULL)
coxph.out <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var)
#restricted_pa_aft <- function(fit.survreg, tau, y.input = NULL, predict = F,
#                             new.x = NULL, new.y = NULL, new.delta = NULL)
coxph.out <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var)
coxph.out
exp.out <- pam.surverg_restricted(fit.exp, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
exp.out
exp.out <- pam.surverg_restricted(fit.exp, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
exp.out <- pam.surverg_restricted(fit.exp, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
exp.out
lognormal.out <- pam.surverg_restricted(fit.lognormal, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
lognormal.out
# split train and test data
sample_index <- sample(1:dim(df)[1], round(2/3*dim(df)[1]), replace = F)
test_data <- df[sample_index, ]
train_y <- df[sample_index, ] %>% select(time, status)
train_x <- X[sample_index, ]
test_y <- df[-sample_index, ] %>% select(time, status)
test_x <- X[-sample_index, ]
coxph.out <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var, newdata = test_data)
coxph.out <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var, newdata = test_data)
coxph.out
# split train and test data
sample_index <- sample(1:dim(df)[1], round(2/3*dim(df)[1]), replace = F)
train_y <- df[sample_index, ] %>% select(time, status)
train_x <- X[sample_index, ]
test_y <- df[-sample_index, ] %>% select(time, status)
test_x <- X[-sample_index, ]
test_data <- df[-sample_index, ]
coxph.out <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var, newdata = test_data)
coxph.out
#restricted_pa_aft <- function(fit.survreg, tau, y.input = NULL, predict = F,
#                             new.x = NULL, new.y = NULL, new.delta = NULL)
coxph.out <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var)
coxph.out
# split train and test data
sample_index <- sample(1:dim(df)[1], round(2/3*dim(df)[1]), replace = F)
train_y <- df[sample_index, ] %>% select(time, status)
train_x <- X[sample_index, ]
test_y <- df[-sample_index, ] %>% select(time, status)
test_x <- X[-sample_index, ]
train_data <- df[sample_index, ]
test_data <- df[-sample_index, ]
# fit models
tau <- quantile(df$time[sample_index], 0.5)
fit.coxph.full <- coxph(Surv(time, status) ~ ., data = train_data,
x=TRUE,y=TRUE)
fit.exp <- survreg(Surv(time, status) ~ ., data = train_data,
dist="exponential", x=TRUE, y=TRUE)
fit.lognormal <- survreg(Surv(time, status) ~ ., data = train_data,
dist="lognormal", x=TRUE, y=TRUE)
fit.weibull <- survreg(Surv(time, status) ~ ., data = train_data,
dist="weibull", x=TRUE, y=TRUE)
column_names <- colnames(df)
length(column_names)
time_var <- "time"
status_var <- "status"
covariates <-column_names[-(1:2)]
length(covariates)
column_names <- colnames(df)
length(column_names)
time_var <- "time"
status_var <- "status"
covariates <-column_names[-(1:2)]
length(covariates)
X <- df %>% select(SEX:educ)
length(colnames(X))
covariates
#restricted_pa_aft <- function(fit.survreg, tau, y.input = NULL, predict = F,
#                             new.x = NULL, new.y = NULL, new.delta = NULL)
coxph.out <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var)
coxph.out
coxph.out <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var, newdata = test_data)
coxph.out
column_names <- colnames(df)
length(column_names)
time_var <- "time"
status_var <- "status"
covariates <-column_names[-(1:2)]
length(covariates)
df[, covariates, drop = FALSE]
rm(list = ls())
library(riskCommunicator)
library(PAmeasures)
library(dplyr)
source("pam.survreg.update.R")
rm(list = ls())
library(riskCommunicator)
library(PAmeasures)
library(dplyr)
source("/Users/wanghd/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/6007dab7ac9fe9b4887bce30e425b9c6/Message/MessageTemp/70b41cd7473589878c1cf96786da88f1/File/pam.survreg.update.R")
#restricted_pa_aft <- function(fit.survreg, tau, y.input = NULL, predict = F,
#                             new.x = NULL, new.y = NULL, new.delta = NULL)
coxph.out <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var)
rm(list = ls())
library(riskCommunicator)
library(PAmeasures)
library(dplyr)
source("/Users/wanghd/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/6007dab7ac9fe9b4887bce30e425b9c6/Message/MessageTemp/70b41cd7473589878c1cf96786da88f1/File/pam.survreg.update.R")
set.seed(1234)
df <- framingham %>% filter(PERIOD==1) %>%
select(DEATH, TIMEDTH, HYPERTEN, TIMEHYP, RANDID, SEX:educ) %>%
group_by(RANDID) %>%
mutate(time = min(TIMEDTH, TIMEHYP),
status = ifelse(time==TIMEDTH, DEATH*2, HYPERTEN),
status = ifelse(status == 1, 1, 0)) %>% #
select(time, status, everything()) %>%
filter(time!=0) %>% ungroup() %>%
select(time, status, SEX:educ, -BPMEDS) %>% na.omit()
X <- df %>% select(SEX:educ)
df$status %>% table
# split train and test data
sample_index <- sample(1:dim(df)[1], round(2/3*dim(df)[1]), replace = F)
train_y <- df[sample_index, ] %>% select(time, status)
train_x <- X[sample_index, ]
test_y <- df[-sample_index, ] %>% select(time, status)
test_x <- X[-sample_index, ]
train_data <- df[sample_index, ]
test_data <- df[-sample_index, ]
# fit models
tau <- quantile(df$time[sample_index], 0.5)
fit.coxph.full <- coxph(Surv(time, status) ~ ., data = train_data,
x=TRUE,y=TRUE)
fit.exp <- survreg(Surv(time, status) ~ ., data = train_data,
dist="exponential", x=TRUE, y=TRUE)
fit.lognormal <- survreg(Surv(time, status) ~ ., data = train_data,
dist="lognormal", x=TRUE, y=TRUE)
fit.weibull <- survreg(Surv(time, status) ~ ., data = train_data,
dist="weibull", x=TRUE, y=TRUE)
column_names <- colnames(df)
length(column_names)
time_var <- "time"
status_var <- "status"
covariates <-column_names[-(1:2)]
length(covariates)
#restricted_pa_aft <- function(fit.survreg, tau, y.input = NULL, predict = F,
#                             new.x = NULL, new.y = NULL, new.delta = NULL)
coxph_restricted <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var)
coxph_restricted
coxph_restricted_comp <- restricted_pa_cox(fit.coxph.full, df$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_comp <- restricted_pa_cox(fit.coxph.full, df$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_comp
coxph_restricted_test <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var, newdata = test_data)
coxph_restricted_test
coxph_restricted_test_comp <- restricted_pa_cox(fit.coxph.full,
new.x = test_x,
new.y = test_y$time,
new.delta = test_y$status) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_test_comp
coxph_restricted_test_comp <- restricted_pa_cox(fit.coxph.full,
new.x = test_x,
new.y = test_y$time,
new.delta = test_y$status) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_test_comp
df_cat <- df %>% mutate(educ = factor(educ))
train_data_cat <- df_cat[sample_index, ],
df_cat <- df %>% mutate(educ = factor(educ))
train_data_cat <- df_cat[sample_index, ]
# fit models
tau <- quantile(df$time[sample_index], 0.5)
fit.coxph.full.cat <- coxph(Surv(time, status) ~ ., data = train_data_cat,
x=TRUE,y=TRUE)
fit.exp.cat <- survreg(Surv(time, status) ~ ., data =train_data_cat,
dist="exponential", x=TRUE, y=TRUE)
fit.lognormal.cat <- survreg(Surv(time, status) ~ ., data = train_data_cat,
dist="lognormal", x=TRUE, y=TRUE)
fit.weibull.cat <- survreg(Surv(time, status) ~ ., data = train_data_cat,
dist="weibull", x=TRUE, y=TRUE)
coxph_restricted_cat <- pam.cox_metrics(fit.coxph.full.cat, covariates = covariates, time_var = time_var, status_var = status_var)
coxph_restricted_cat
coxph_restricted_comp_cat <- restricted_pa_cox(fit.coxph.full.cat, df_cat$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_comp_cat
exp.out <- pam.surverg_restricted(fit.exp, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
exp.out
setwd("/Users/wanghd/Desktop/Research/Survival Analysis/PAmeasures-master")
devtools::document()
.rs.restartR()
devtools::install("/Users/wanghd/Desktop/Research/Survival Analysis/PAmeasures-master")
rm(list = ls())
library(riskCommunicator)
library(PAmeasures)
library(dplyr)
source("/Users/wanghd/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/6007dab7ac9fe9b4887bce30e425b9c6/Message/MessageTemp/70b41cd7473589878c1cf96786da88f1/File/pam.survreg.update.R")
set.seed(1234)
df <- framingham %>% filter(PERIOD==1) %>%
select(DEATH, TIMEDTH, HYPERTEN, TIMEHYP, RANDID, SEX:educ) %>%
group_by(RANDID) %>%
mutate(time = min(TIMEDTH, TIMEHYP),
status = ifelse(time==TIMEDTH, DEATH*2, HYPERTEN),
status = ifelse(status == 1, 1, 0)) %>% #
select(time, status, everything()) %>%
filter(time!=0) %>% ungroup() %>%
select(time, status, SEX:educ, -BPMEDS) %>% na.omit()
X <- df %>% select(SEX:educ)
df$status %>% table
# split train and test data
sample_index <- sample(1:dim(df)[1], round(2/3*dim(df)[1]), replace = F)
train_y <- df[sample_index, ] %>% select(time, status)
train_x <- X[sample_index, ]
test_y <- df[-sample_index, ] %>% select(time, status)
test_x <- X[-sample_index, ]
train_data <- df[sample_index, ]
test_data <- df[-sample_index, ]
# fit models
tau <- quantile(df$time[sample_index], 0.5)
fit.coxph.full <- coxph(Surv(time, status) ~ ., data = train_data,
x=TRUE,y=TRUE)
fit.exp <- survreg(Surv(time, status) ~ ., data = train_data,
dist="exponential", x=TRUE, y=TRUE)
fit.lognormal <- survreg(Surv(time, status) ~ ., data = train_data,
dist="lognormal", x=TRUE, y=TRUE)
fit.weibull <- survreg(Surv(time, status) ~ ., data = train_data,
dist="weibull", x=TRUE, y=TRUE)
column_names <- colnames(df)
length(column_names)
time_var <- "time"
status_var <- "status"
covariates <-column_names[-(1:2)]
length(covariates)
coxph_restricted <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var)
coxph_restricted
coxph_restricted_comp <- restricted_pa_cox(fit.coxph.full, df$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_comp
coxph_restricted_test <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var, newdata = test_data)
coxph_restricted_test
coxph_restricted_test_comp <- restricted_pa_cox(fit.coxph.full,
new.x = test_x,
new.y = test_y$time,
new.delta = test_y$status) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_test_comp
df_cat <- df %>% mutate(educ = factor(educ))
train_data_cat <- df_cat[sample_index, ]
# fit models
tau <- quantile(df$time[sample_index], 0.5)
fit.coxph.full.cat <- coxph(Surv(time, status) ~ ., data = train_data_cat,
x=TRUE,y=TRUE)
fit.exp.cat <- survreg(Surv(time, status) ~ ., data =train_data_cat,
dist="exponential", x=TRUE, y=TRUE)
fit.lognormal.cat <- survreg(Surv(time, status) ~ ., data = train_data_cat,
dist="lognormal", x=TRUE, y=TRUE)
fit.weibull.cat <- survreg(Surv(time, status) ~ ., data = train_data_cat,
dist="weibull", x=TRUE, y=TRUE)
coxph_restricted_cat <- pam.cox_metrics(fit.coxph.full.cat, covariates = covariates, time_var = time_var, status_var = status_var)
coxph_restricted_cat
coxph_restricted_comp_cat <- restricted_pa_cox(fit.coxph.full.cat, df_cat$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_comp_cat
exp.out <- pam.surverg_restricted(fit.exp, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
.rs.restartR()
devtools::install("/Users/wanghd/Desktop/Research/Survival Analysis/PAmeasures-master")
rm(list = ls())
library(riskCommunicator)
library(PAmeasures)
library(dplyr)
source("/Users/wanghd/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/6007dab7ac9fe9b4887bce30e425b9c6/Message/MessageTemp/70b41cd7473589878c1cf96786da88f1/File/pam.survreg.update.R")
set.seed(1234)
df <- framingham %>% filter(PERIOD==1) %>%
select(DEATH, TIMEDTH, HYPERTEN, TIMEHYP, RANDID, SEX:educ) %>%
group_by(RANDID) %>%
mutate(time = min(TIMEDTH, TIMEHYP),
status = ifelse(time==TIMEDTH, DEATH*2, HYPERTEN),
status = ifelse(status == 1, 1, 0)) %>% #
select(time, status, everything()) %>%
filter(time!=0) %>% ungroup() %>%
select(time, status, SEX:educ, -BPMEDS) %>% na.omit()
X <- df %>% select(SEX:educ)
df$status %>% table
# split train and test data
sample_index <- sample(1:dim(df)[1], round(2/3*dim(df)[1]), replace = F)
train_y <- df[sample_index, ] %>% select(time, status)
train_x <- X[sample_index, ]
test_y <- df[-sample_index, ] %>% select(time, status)
test_x <- X[-sample_index, ]
train_data <- df[sample_index, ]
test_data <- df[-sample_index, ]
# fit models
tau <- quantile(df$time[sample_index], 0.5)
fit.coxph.full <- coxph(Surv(time, status) ~ ., data = train_data,
x=TRUE,y=TRUE)
fit.exp <- survreg(Surv(time, status) ~ ., data = train_data,
dist="exponential", x=TRUE, y=TRUE)
fit.lognormal <- survreg(Surv(time, status) ~ ., data = train_data,
dist="lognormal", x=TRUE, y=TRUE)
fit.weibull <- survreg(Surv(time, status) ~ ., data = train_data,
dist="weibull", x=TRUE, y=TRUE)
column_names <- colnames(df)
length(column_names)
time_var <- "time"
status_var <- "status"
covariates <-column_names[-(1:2)]
length(covariates)
coxph_restricted <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var)
coxph_restricted
coxph_restricted_comp <- restricted_pa_cox(fit.coxph.full, df$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_comp
coxph_restricted_test <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var, newdata = test_data)
coxph_restricted_test
coxph_restricted_test_comp <- restricted_pa_cox(fit.coxph.full,
new.x = test_x,
new.y = test_y$time,
new.delta = test_y$status) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_test_comp
df_cat <- df %>% mutate(educ = factor(educ))
train_data_cat <- df_cat[sample_index, ]
# fit models
tau <- quantile(df$time[sample_index], 0.5)
fit.coxph.full.cat <- coxph(Surv(time, status) ~ ., data = train_data_cat,
x=TRUE,y=TRUE)
fit.exp.cat <- survreg(Surv(time, status) ~ ., data =train_data_cat,
dist="exponential", x=TRUE, y=TRUE)
fit.lognormal.cat <- survreg(Surv(time, status) ~ ., data = train_data_cat,
dist="lognormal", x=TRUE, y=TRUE)
fit.weibull.cat <- survreg(Surv(time, status) ~ ., data = train_data_cat,
dist="weibull", x=TRUE, y=TRUE)
coxph_restricted_cat <- pam.cox_metrics(fit.coxph.full.cat, covariates = covariates, time_var = time_var, status_var = status_var)
coxph_restricted_cat
coxph_restricted_comp_cat <- restricted_pa_cox(fit.coxph.full.cat, df_cat$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_comp_cat
exp.out <- pam.surverg_restricted(fit.exp, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
exp.out
lognormal.out <- pam.surverg_restricted(fit.lognormal, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
lognormal.out
coxph_restricted <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var)
coxph_restricted
coxph_restricted_comp <- restricted_pa_cox(fit.coxph.full, df$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_comp
exp.out <- pam.surverg_restricted(fit.exp, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
exp.out
exp.out_comp <- restricted_pa_aft(fit.exp, tau = 1e10, df$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
exp.out_comp
lognormal.out <- pam.surverg_restricted(fit.lognormal, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
lognormal.out
lognormal.out_comp <- restricted_pa_aft(fit.lognormal, tau = 1e10, df$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
lognormal.out_comp
weibull.out <- pam.surverg_restricted(fit.weibull, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
lognormal.out
weilbull.out_comp <- restricted_pa_aft(fit.weibull, tau = 1e10, df$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
weilbull.out_comp
weibull.out <- pam.surverg_restricted(fit.weibull, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
weibull.out
weilbull.out_comp <- restricted_pa_aft(fit.weibull, tau = 1e10,
df$time[sample_index]) %>% Reduce("c",.) %>% as.numeric()
weilbull.out_comp
coxph_restricted_test <- pam.cox_metrics(fit.coxph.full, covariates = covariates, time_var = time_var, status_var = status_var, newdata = test_data)
coxph_restricted_test
coxph_restricted_test_comp <- restricted_pa_cox(fit.coxph.full,
new.x = test_x,
new.y = test_y$time,
new.delta = test_y$status) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_test_comp
exp.out_test <- pam.surverg_restricted(fit.exp, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10, newdata = test_data)
exp.out_test
exp.out_test_comp <- restricted_pa_aft(fit.exp, tau = 1e10,
new.x = df[-sample_index, -c(1,2)],
new.y = df$time[-sample_index],
new.delta = df$status[-sample_index]) %>%
Reduce("c",.) %>% as.numeric()
exp.out_test_comp
lognormal.out_test <- pam.surverg_restricted(fit.lognormal, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10, newdata = test_data)
lognormal.out_test
lognormal.out_test_comp <- restricted_pa_aft(fit.lognormal, tau = 1e10,
new.x = df[-sample_index, -c(1,2)],
new.y = df$time[-sample_index],
new.delta = df$status[-sample_index]) %>%
Reduce("c",.) %>% as.numeric()
lognormal.out_test_comp
weibull.out_test <- pam.surverg_restricted(fit.weibull, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10, newdata = test_data)
weibull.out_test
weilbull.out_test_comp <- restricted_pa_aft(fit.weibull, tau = 1e10,
new.x = df[-sample_index, -c(1,2)],
new.y = df$time[-sample_index],
new.delta = df$status[-sample_index]) %>%
Reduce("c",.) %>% as.numeric()
weilbull.out_test_comp
coxph_restricted_cat <- pam.cox_metrics(fit.coxph.full.cat, covariates = covariates, time_var = time_var, status_var = status_var)
coxph_restricted_cat
coxph_restricted_comp_cat <- restricted_pa_cox(fit.coxph.full.cat, df_cat$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_comp_cat
exp.out_cat <- pam.surverg_restricted(fit.exp.cat, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
exp.out_cat
exp.out_comp_cat <- restricted_pa_aft(fit.exp.cat, tau = 1e10, df_cat$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
exp.out_comp_cat
exp.out_cat <- pam.surverg_restricted(fit.exp.cat, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
exp.out_cat
exp.out_cat_comp <- restricted_pa_aft(fit.exp.cat, tau = 1e10, df_cat$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
exp.out_cat_comp
lognormal.out_cat <- pam.surverg_restricted(fit.lognormal.cat, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
lognormal.out_cat
lognormal.out_cat_comp <- restricted_pa_aft(fit.lognormal.cat, tau = 1e10, df_cat$time[sample_index]) %>%
Reduce("c",.) %>% as.numeric()
lognormal.out_cat_comp
weibull.out_cat <- pam.surverg_restricted(fit.weibull.cat, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10)
weibull.out_cat
weilbull.out_cat_comp <- restricted_pa_aft(fit.weibull.cat, tau = 1e10,
df_cat$time[sample_index]) %>% Reduce("c",.) %>% as.numeric()
weilbull.out_cat_comp
df_cat <- df %>% mutate(educ = factor(educ))
train_data_cat <- df_cat[sample_index, ]
test_data_cat <- df_cat[-sample_index,]
coxph_restricted_cat_test <- pam.cox_metrics(fit.coxph.full.cat, covariates = covariates, time_var = time_var, status_var = status_var, newdata = test_data_cat)
coxph_restricted_cat_test
coxph_restricted_cat_test_comp <- restricted_pa_cox(fit.coxph.full.cat,
new.x = df[-sample_index, -c(1,2)],
new.y = df$time[-sample_index],
new.delta = df$status[-sample_index]) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_cat_test <- pam.cox_metrics(fit.coxph.full.cat, covariates = covariates, time_var = time_var, status_var = status_var, newdata = test_data_cat)
coxph_restricted_cat_test
coxph_restricted_cat_test_comp <- restricted_pa_cox(fit.coxph.full.cat,
new.x = df_cat[-sample_index, -c(1,2)],
new.y = df_cat$time[-sample_index],
new.delta = df_cat$status[-sample_index]) %>%
Reduce("c",.) %>% as.numeric()
coxph_restricted_test_comp
exp.out_cat_test <- pam.surverg_restricted(fit.exp.cat, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10, newdata = test_data_cat)
exp.out_cat_test
exp.out_cat_test_comp <- restricted_pa_aft(fit.exp.cat, tau = 1e10,
new.x = df_cat[-sample_index, -c(1,2)],
new.y = df_cat$time[-sample_index],
new.delta = df_cat$status[-sample_index]) %>%
Reduce("c",.) %>% as.numeric()
exp.out_cat_test_comp
lognormal.out_cat_test <- pam.surverg_restricted(fit.lognormal, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10, newdata = test_data_cat)
lognormal.out_cat_test <- pam.surverg_restricted(fit.exp.cat, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10, newdata = test_data_cat)
lognormal.out_cat_test
lognormal.out_cat_test_comp <- restricted_pa_aft(fit.lognormal, tau = 1e10,
new.x = df_cat[-sample_index, -c(1,2)],
new.y = df_cat$time[-sample_index],
new.delta = df_cat$status[-sample_index]) %>%
Reduce("c",.) %>% as.numeric()
lognormal.out_cat_test <- pam.surverg_restricted(fit.lognormal.cat, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10, newdata = test_data_cat)
lognormal.out_cat_test
lognormal.out_cat_test_comp <- restricted_pa_aft(fit.lognormal.cat, tau = 1e10,
new.x = df_cat[-sample_index, -c(1,2)],
new.y = df_cat$time[-sample_index],
new.delta = df_cat$status[-sample_index]) %>%
Reduce("c",.) %>% as.numeric()
lognormal.out_cat_test_comp
weibull.out_cat_test <- pam.surverg_restricted(fit.weibull.cat, covariates = covariates, time_var = time_var, status_var = status_var, tau = 1e10, newdata = test_data_cat)
weibull.out_cat_test
weilbull.out_cat_test_comp <- restricted_pa_aft(fit.weibull.cat, tau = 1e10,
new.x = df_cat[-sample_index, -c(1,2)],
new.y = df_cat$time[-sample_index],
new.delta = df_cat$status[-sample_index]) %>%
Reduce("c",.) %>% as.numeric()
weilbull.out_cat_test_comp
