% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pam.survial_eval.R
\name{pam.survival_eval}
\alias{pam.survival_eval}
\title{Performance Metrics for Survival Analysis Models}
\usage{
pam.survival_eval(
  train_data,
  covariates,
  models = "coxph",
  metrics = "all",
  predicted_data = NULL,
  t_star = NULL,
  tau = NULL
)
}
\arguments{
\item{train_data}{A data frame containing the survival data.}

\item{covariates}{A character vector of covariate names to include in the model.}

\item{metrics}{A character string or vector specifying the metrics to compute. Default is "all" to compute all available metrics. Options include:
\itemize{
  \item "R_square": R-squared metric.
  \item "L_square": L-squared metric.
  \item "Pesudo_R": Pseudo-R-squared metric.
  \item "Harrells_C": Harrell's Concordance Index.
  \item "Unos_C": Uno's Concordance Index.
  \item "R_sph": Explained variation (R_sph).
  \item "R_sh": Explained variation (R_sh).
  \item "Brier_Score": Brier Score.
  \item "Time_Dependent_Auc": Time-dependent AUC.
}}

\item{predicted_data}{(Optional) A data frame containing validation data. If `NULL`, the function 
uses the same data as `data` for model evaluation.}

\item{t_star}{(Optional) A positive numeric value specifying the time point at which the Brier score and AUC score is calculated.}

\item{tau}{(Optional) A time point for truncating the survival time. If provided, the function evaluates predictions up to this time point.}

\item{model}{A character string or vector specifying the model types to fit (e.g., "coxph", "exp", "lognormal", "weibull"). Default is "coxph" to fit all models.}
}
\value{
A data frame containing the selected model's performance metrics.
}
\description{
This function computes a comprehensive set of performance metrics for survival analysis models. It provides metrics such as R_square, L_square, Pseudo_R, Harrell’s C, Uno’s C, R_sph (distance-based estimator for survival predictive accuracy), R_sh, Brier Score, and Time-dependent AUC. Users can specify particular metrics and model types, enabling tailored performance evaluation for various survival models.
}
\examples{
library(PAmeasures)
library(survival)
library(rms)
library(dplyr)

Use Mayo Clinic Primary Biliary Cirrhosis Data
data(pbc)
pbc <- pbc \%>\%
filter(is.na(trt) == FALSE) \%>\%
mutate(log_albumin = log(albumin),
log_bili = log(bili),
log_protime = log(protime),
status = ifelse(status == 2, 1, 0))

# Define variables
covariates <- c("age", "log_albumin", "log_bili", "log_protime", "edema")

# Call the function with all metrics and all models
results <- pam.survival_eval(train_data = pbc,
covariates = covariates)

# Call the function with specific models and metrics
results2 <- pam.survival_eval(train_data = pbc,
covariates = covariates,
models = c("lognormal", "weibull"),
metrics = c("R_square", "L_square", "Brier Score"))

}
