% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pam.prediction_metrics.R
\name{pam.prediction_metrics}
\alias{pam.prediction_metrics}
\title{Summary of Performance Metrics for Predicted Survival Data}
\usage{
pam.prediction_metrics(
  predicted_data,
  survival_time,
  metrics,
  status = NULL,
  tau = NULL,
  t_star = NULL,
  start_time = NULL
)
}
\arguments{
\item{predicted_data}{A numeric vector of predicted survival probabilities or scores.}

\item{survival_time}{A numeric vector of observed survival times.}

\item{metrics}{A character string or vector specifying the metrics to compute. Default is "all" to compute all available metrics. Options include:
\itemize{
  \item "R_square": R-squared metric.
  \item "L_square": L-squared metric.
  \item "Pesudo_R": Pseudo-R-squared metric.
  \item "Harrells_C": Harrell's Concordance Index.
  \item "Unos_C": Uno's Concordance Index.
  \item "R_sph": Explained variation (R_sph).
  \item "R_sh": Explained variation (R_sh).
  \item "Brier_Score": Brier Score.
  \item "Time_Dependent_Auc": Time-dependent AUC.
}}

\item{status}{A numeric or logical vector indicating event status (1 for event, 0 for censoring).}

\item{tau}{An optional numeric value for restricted time horizon. Default is NULL.}

\item{t_star}{An optional numeric value specifying the time point for certain metrics. Default is NULL.}
}
\value{
A data frame summarizing the requested performance metrics.
}
\description{
This function computes and summarizes various performance metrics for survival data
using predicted values and observed survival data. Users can specify the desired metrics
or compute all available metrics by default.
}
\examples{
# Example data
predicted_data <- c(0.8, 0.6, 0.4, 0.2)
survival_time <- c(5, 8, 3, 10)
status <- c(1, 0, 1, 1)

# Compute a single metric
result <- pam.prediction_metrics(
predicted_data = predicted_data,
survival_time = survival_time,
metrics = "R_square",
status = status
)
print(result)

# Compute all metrics
result_all <- pam.prediction_metrics(
predicted_data = predicted_data,
survival_time = survival_time,
metrics = "all",
status = status
)
print(result_all)

}
